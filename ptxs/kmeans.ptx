
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,2]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.2
.target sm_80
.address_size 64


.global .texref t_features;
.global .texref t_features_flipped;
.global .texref t_clusters;
.const .align 4 .b8 c_clusters[4352];

.visible .entry _Z14invert_mappingPfS_ii(
.param .u64 _Z14invert_mappingPfS_ii_param_0,
.param .u64 _Z14invert_mappingPfS_ii_param_1,
.param .u32 _Z14invert_mappingPfS_ii_param_2,
.param .u32 _Z14invert_mappingPfS_ii_param_3
)
{
.reg .pred %p<8>;
.reg .f32 %f<6>;
.reg .b32 %r<26>;
.reg .b64 %rd<30>;


ld.param.u64 %rd17, [_Z14invert_mappingPfS_ii_param_0];
ld.param.u64 %rd18, [_Z14invert_mappingPfS_ii_param_1];
ld.param.u32 %r11, [_Z14invert_mappingPfS_ii_param_2];
ld.param.u32 %r12, [_Z14invert_mappingPfS_ii_param_3];
cvta.to.global.u64 %rd1, %rd18;
cvta.to.global.u64 %rd2, %rd17;
mov.u32 %r13, %ctaid.x;
mov.u32 %r14, %ntid.x;
mov.u32 %r15, %tid.x;
mad.lo.s32 %r1, %r14, %r13, %r15;
setp.ge.s32 %p1, %r1, %r11;
setp.lt.s32 %p2, %r12, 1;
or.pred %p3, %p1, %p2;
@%p3 bra LBB0_7;

add.s32 %r17, %r12, -1;
and.b32 %r25, %r12, 3;
setp.lt.u32 %p4, %r17, 3;
mov.u32 %r24, 0;
@%p4 bra LBB0_4;

sub.s32 %r23, %r12, %r25;
mul.wide.s32 %rd19, %r1, 4;
add.s64 %rd27, %rd1, %rd19;
mad.lo.s32 %r19, %r12, %r1, 2;
mul.wide.s32 %rd20, %r19, 4;
add.s64 %rd26, %rd2, %rd20;
mul.wide.s32 %rd5, %r11, 4;
mov.u32 %r24, 0;

LBB0_3:
ld.global.f32 %f1, [%rd26+-8];
st.global.f32 [%rd27], %f1;
ld.global.f32 %f2, [%rd26+-4];
add.s64 %rd21, %rd27, %rd5;
st.global.f32 [%rd21], %f2;
ld.global.f32 %f3, [%rd26];
add.s64 %rd22, %rd21, %rd5;
st.global.f32 [%rd22], %f3;
ld.global.f32 %f4, [%rd26+4];
add.s64 %rd23, %rd22, %rd5;
add.s64 %rd27, %rd23, %rd5;
st.global.f32 [%rd23], %f4;
add.s32 %r24, %r24, 4;
add.s64 %rd26, %rd26, 16;
add.s32 %r23, %r23, -4;
setp.ne.s32 %p5, %r23, 0;
@%p5 bra LBB0_3;

LBB0_4:
setp.eq.s32 %p6, %r25, 0;
@%p6 bra LBB0_7;

mad.lo.s32 %r20, %r24, %r11, %r1;
mul.wide.s32 %rd24, %r20, 4;
add.s64 %rd29, %rd1, %rd24;
mul.wide.s32 %rd11, %r11, 4;
mad.lo.s32 %r21, %r12, %r1, %r24;
mul.wide.s32 %rd25, %r21, 4;
add.s64 %rd28, %rd2, %rd25;

LBB0_6:
.pragma "nounroll";
ld.global.f32 %f5, [%rd28];
st.global.f32 [%rd29], %f5;
add.s64 %rd29, %rd29, %rd11;
add.s64 %rd28, %rd28, 4;
add.s32 %r25, %r25, -1;
setp.ne.s32 %p7, %r25, 0;
@%p7 bra LBB0_6;

LBB0_7:
ret;

}

.visible .entry _Z11kmeansPointPfiiiPiS_S_S0_(
.param .u64 _Z11kmeansPointPfiiiPiS_S_S0__param_0,
.param .u32 _Z11kmeansPointPfiiiPiS_S_S0__param_1,
.param .u32 _Z11kmeansPointPfiiiPiS_S_S0__param_2,
.param .u32 _Z11kmeansPointPfiiiPiS_S_S0__param_3,
.param .u64 _Z11kmeansPointPfiiiPiS_S_S0__param_4,
.param .u64 _Z11kmeansPointPfiiiPiS_S_S0__param_5,
.param .u64 _Z11kmeansPointPfiiiPiS_S_S0__param_6,
.param .u64 _Z11kmeansPointPfiiiPiS_S_S0__param_7
)
{
.reg .pred %p<19>;
.reg .f32 %f<75>;
.reg .b32 %r<117>;
.reg .b64 %rd<16>;


ld.param.u32 %r33, [_Z11kmeansPointPfiiiPiS_S_S0__param_1];
ld.param.u32 %r34, [_Z11kmeansPointPfiiiPiS_S_S0__param_2];
ld.param.u32 %r35, [_Z11kmeansPointPfiiiPiS_S_S0__param_3];
ld.param.u64 %rd6, [_Z11kmeansPointPfiiiPiS_S_S0__param_4];
mov.u32 %r37, %nctaid.x;
mov.u32 %r38, %ctaid.y;
mov.u32 %r39, %ctaid.x;
mad.lo.s32 %r40, %r37, %r38, %r39;
mov.u32 %r41, %ntid.y;
mov.u32 %r42, %ntid.x;
mul.lo.s32 %r43, %r41, %r42;
mov.u32 %r44, %tid.x;
mad.lo.s32 %r45, %r43, %r40, %r44;
setp.ge.u32 %p1, %r45, %r34;
setp.lt.s32 %p2, %r35, 1;
mov.u32 %r116, -1;
or.pred %p3, %p1, %p2;
@%p3 bra LBB1_16;

setp.gt.s32 %p4, %r33, 0;
@%p4 bra LBB1_7;
bra.uni LBB1_2;

LBB1_7:
mov.u32 %r116, -1;
mov.u32 %r52, 0;
mov.f32 %f70, 0f7F7FFFFF;
add.s32 %r55, %r33, -1;
setp.lt.u32 %p11, %r55, 3;
mov.f32 %f20, 0f00000000;
mov.u64 %rd11, c_clusters;
mov.u32 %r111, %r52;

LBB1_8:
mul.lo.s32 %r20, %r111, %r33;
mov.f32 %f74, %f20;
mov.u32 %r115, %r52;
@%p11 bra LBB1_11;

mul.wide.s32 %rd7, %r20, 4;
add.s64 %rd9, %rd11, %rd7;
add.s64 %rd15, %rd9, 8;
and.b32 %r65, %r33, 3;
sub.s32 %r22, %r65, %r33;
mov.u32 %r115, 0;
mov.f32 %f74, 0f00000000;
mov.u32 %r113, %r45;

LBB1_10:
tex.1d.v4.f32.s32 {%f22, %f23, %f24, %f25}, [t_features, {%r113}];
ld.const.f32 %f26, [%rd15+-8];
sub.f32 %f27, %f22, %f26;
fma.rn.f32 %f28, %f27, %f27, %f74;
add.s32 %r66, %r34, %r113;
tex.1d.v4.f32.s32 {%f29, %f30, %f31, %f32}, [t_features, {%r66}];
ld.const.f32 %f33, [%rd15+-4];
sub.f32 %f34, %f29, %f33;
fma.rn.f32 %f35, %f34, %f34, %f28;
add.s32 %r67, %r34, %r66;
tex.1d.v4.f32.s32 {%f36, %f37, %f38, %f39}, [t_features, {%r67}];
ld.const.f32 %f40, [%rd15];
sub.f32 %f41, %f36, %f40;
fma.rn.f32 %f42, %f41, %f41, %f35;
add.s32 %r68, %r34, %r67;
add.s32 %r113, %r34, %r68;
tex.1d.v4.f32.s32 {%f43, %f44, %f45, %f46}, [t_features, {%r68}];
ld.const.f32 %f47, [%rd15+4];
sub.f32 %f48, %f43, %f47;
fma.rn.f32 %f74, %f48, %f48, %f42;
add.s64 %rd15, %rd15, 16;
add.s32 %r115, %r115, 4;
add.s32 %r69, %r22, %r115;
setp.ne.s32 %p12, %r69, 0;
@%p12 bra LBB1_10;

LBB1_11:
and.b32 %r70, %r33, 3;
setp.eq.s32 %p13, %r70, 0;
@%p13 bra LBB1_15;

setp.eq.s32 %p14, %r70, 1;
mad.lo.s32 %r80, %r43, %r40, %r44;
mad.lo.s32 %r28, %r115, %r34, %r80;
tex.1d.v4.f32.s32 {%f49, %f50, %f51, %f52}, [t_features, {%r28}];
add.s32 %r81, %r115, %r20;
mul.wide.s32 %rd10, %r81, 4;
add.s64 %rd5, %rd11, %rd10;
ld.const.f32 %f53, [%rd5];
sub.f32 %f54, %f49, %f53;
fma.rn.f32 %f74, %f54, %f54, %f74;
@%p14 bra LBB1_15;

setp.eq.s32 %p15, %r70, 2;
add.s32 %r29, %r28, %r34;
tex.1d.v4.f32.s32 {%f55, %f56, %f57, %f58}, [t_features, {%r29}];
ld.const.f32 %f59, [%rd5+4];
sub.f32 %f60, %f55, %f59;
fma.rn.f32 %f74, %f60, %f60, %f74;
@%p15 bra LBB1_15;

add.s32 %r83, %r29, %r34;
tex.1d.v4.f32.s32 {%f61, %f62, %f63, %f64}, [t_features, {%r83}];
ld.const.f32 %f65, [%rd5+8];
sub.f32 %f66, %f61, %f65;
fma.rn.f32 %f74, %f66, %f66, %f74;

LBB1_15:
setp.lt.f32 %p16, %f74, %f70;
selp.b32 %r116, %r111, %r116, %p16;
selp.f32 %f70, %f74, %f70, %p16;
add.s32 %r111, %r111, 1;
setp.lt.s32 %p17, %r111, %r35;
@%p17 bra LBB1_8;
bra.uni LBB1_16;

LBB1_2:
add.s32 %r49, %r35, -1;
mov.u32 %r116, -1;
and.b32 %r110, %r35, 3;
setp.lt.u32 %p5, %r49, 3;
mov.u32 %r106, 0;
mov.f32 %f68, 0f7F7FFFFF;
@%p5 bra LBB1_5;

sub.s32 %r104, %r35, %r110;
mov.u32 %r116, -1;
mov.u32 %r106, 0;
mov.f32 %f68, 0f7F7FFFFF;

LBB1_4:
setp.gt.f32 %p6, %f68, 0f00000000;
selp.b32 %r116, %r106, %r116, %p6;
selp.f32 %f68, 0f00000000, %f68, %p6;
add.s32 %r106, %r106, 4;
add.s32 %r104, %r104, -4;
setp.ne.s32 %p7, %r104, 0;
@%p7 bra LBB1_4;

LBB1_5:
setp.eq.s32 %p8, %r110, 0;
@%p8 bra LBB1_16;

LBB1_6:
.pragma "nounroll";
setp.gt.f32 %p9, %f68, 0f00000000;
selp.b32 %r116, %r106, %r116, %p9;
selp.f32 %f68, 0f00000000, %f68, %p9;
add.s32 %r106, %r106, 1;
add.s32 %r110, %r110, -1;
setp.eq.s32 %p10, %r110, 0;
@%p10 bra LBB1_16;
bra.uni LBB1_6;

LBB1_16:
@%p1 bra LBB1_18;

cvta.to.global.u64 %rd12, %rd6;
mul.wide.u32 %rd13, %r45, 4;
add.s64 %rd14, %rd12, %rd13;
st.global.u32 [%rd14], %r116;

LBB1_18:
ret;

}


Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit
