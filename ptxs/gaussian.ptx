
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,2]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.2
.target sm_80
.address_size 64



.visible .entry _Z4Fan1PfS_ii(
.param .u64 _Z4Fan1PfS_ii_param_0,
.param .u64 _Z4Fan1PfS_ii_param_1,
.param .u32 _Z4Fan1PfS_ii_param_2,
.param .u32 _Z4Fan1PfS_ii_param_3
)
{
.reg .pred %p<2>;
.reg .f32 %f<4>;
.reg .b32 %r<13>;
.reg .b64 %rd<14>;


ld.param.u64 %rd1, [_Z4Fan1PfS_ii_param_0];
ld.param.u64 %rd2, [_Z4Fan1PfS_ii_param_1];
ld.param.u32 %r2, [_Z4Fan1PfS_ii_param_2];
ld.param.u32 %r3, [_Z4Fan1PfS_ii_param_3];
mov.u32 %r4, %ntid.x;
mov.u32 %r5, %ctaid.x;
mov.u32 %r6, %tid.x;
mad.lo.s32 %r1, %r5, %r4, %r6;
not.b32 %r7, %r3;
add.s32 %r8, %r7, %r2;
setp.ge.u32 %p1, %r1, %r8;
@%p1 bra LBB0_2;

cvta.to.global.u64 %rd3, %rd2;
cvta.to.global.u64 %rd4, %rd1;
add.s32 %r9, %r1, %r3;
add.s32 %r10, %r9, 1;
mul.lo.s32 %r11, %r10, %r2;
mul.wide.u32 %rd5, %r11, 4;
add.s64 %rd6, %rd3, %rd5;
mul.wide.s32 %rd7, %r3, 4;
add.s64 %rd8, %rd6, %rd7;
mul.lo.s32 %r12, %r3, %r2;
mul.wide.s32 %rd9, %r12, 4;
add.s64 %rd10, %rd3, %rd9;
add.s64 %rd11, %rd10, %rd7;
ld.global.f32 %f1, [%rd11];
ld.global.f32 %f2, [%rd8];
div.rn.f32 %f3, %f2, %f1;
add.s64 %rd12, %rd4, %rd5;
add.s64 %rd13, %rd12, %rd7;
st.global.f32 [%rd13], %f3;

LBB0_2:
ret;

}

.visible .entry _Z4Fan2PfS_S_iii(
.param .u64 _Z4Fan2PfS_S_iii_param_0,
.param .u64 _Z4Fan2PfS_S_iii_param_1,
.param .u64 _Z4Fan2PfS_S_iii_param_2,
.param .u32 _Z4Fan2PfS_S_iii_param_3,
.param .u32 _Z4Fan2PfS_S_iii_param_4,
.param .u32 _Z4Fan2PfS_S_iii_param_5
)
{
.reg .pred %p<4>;
.reg .f32 %f<11>;
.reg .b32 %r<21>;
.reg .b64 %rd<19>;


ld.param.u64 %rd4, [_Z4Fan2PfS_S_iii_param_0];
ld.param.u64 %rd2, [_Z4Fan2PfS_S_iii_param_1];
ld.param.u64 %rd3, [_Z4Fan2PfS_S_iii_param_2];
ld.param.u32 %r4, [_Z4Fan2PfS_S_iii_param_3];
ld.param.u32 %r5, [_Z4Fan2PfS_S_iii_param_5];
cvta.to.global.u64 %rd1, %rd4;
mov.u32 %r6, %ntid.x;
mov.u32 %r7, %ctaid.x;
mov.u32 %r8, %tid.x;
mad.lo.s32 %r1, %r7, %r6, %r8;
not.b32 %r9, %r5;
add.s32 %r10, %r9, %r4;
setp.ge.u32 %p1, %r1, %r10;
@%p1 bra LBB1_4;

mov.u32 %r11, %tid.y;
mov.u32 %r12, %ntid.y;
mov.u32 %r13, %ctaid.y;
mad.lo.s32 %r2, %r13, %r12, %r11;
sub.s32 %r14, %r4, %r5;
setp.ge.u32 %p2, %r2, %r14;
@%p2 bra LBB1_4;

cvta.to.global.u64 %rd5, %rd2;
add.s32 %r15, %r1, %r5;
add.s32 %r16, %r15, 1;
mul.lo.s32 %r17, %r16, %r4;
add.s32 %r18, %r17, %r5;
mul.wide.s32 %rd6, %r18, 4;
add.s64 %rd7, %rd1, %rd6;
add.s32 %r19, %r2, %r5;
mad.lo.s32 %r20, %r5, %r4, %r19;
mul.wide.s32 %rd8, %r20, 4;
add.s64 %rd9, %rd5, %rd8;
ld.global.f32 %f1, [%rd9];
ld.global.f32 %f2, [%rd7];
mul.f32 %f3, %f2, %f1;
add.s32 %r3, %r17, %r19;
mul.wide.s32 %rd10, %r3, 4;
add.s64 %rd11, %rd5, %rd10;
ld.global.f32 %f4, [%rd11];
sub.f32 %f5, %f4, %f3;
st.global.f32 [%rd11], %f5;
setp.ne.s32 %p3, %r2, 0;
@%p3 bra LBB1_4;

cvta.to.global.u64 %rd12, %rd3;
add.s64 %rd14, %rd1, %rd10;
mul.wide.s32 %rd15, %r5, 4;
add.s64 %rd16, %rd12, %rd15;
ld.global.f32 %f6, [%rd16];
ld.global.f32 %f7, [%rd14];
mul.f32 %f8, %f7, %f6;
mul.wide.s32 %rd17, %r1, 4;
add.s64 %rd18, %rd16, %rd17;
ld.global.f32 %f9, [%rd18+4];
sub.f32 %f10, %f9, %f8;
st.global.f32 [%rd18+4], %f10;

LBB1_4:
ret;

}


Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit
